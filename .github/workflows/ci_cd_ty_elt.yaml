name: CI-CD Pipeline

on:
    push:
        branches:
            - main
            - 'feature/*'
    pull_request:
        branches:
            - main
    workflow_dispatch:

        
jobs:
    build-and-push-image:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Get changed files
              id: changed-files-build
              uses: tj-actions/changed-files@v45
              with:
                files: |
                    dockerfile
                    requirements.txt
            - name: Set up Docker Buildx
              if: steps.changed-files-build.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
              uses: docker/setup-buildx-action@v3
            - name: Log in to DockerHub
              if: steps.changed-files-build.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
              uses: docker/login-action@v3
              with:
                username: ${{ vars.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_PASSWORD }}
            - name: Build and push Docker image
              if: steps.changed-files-build.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch'
              run: |
                      docker buildx build --push \
                        --tag ${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.DOCKERHUB_REPOSITORY }}:latest \
                        --tag ${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.DOCKERHUB_REPOSITORY }}:${{ github.sha }} \
                        .

    unit-and-integration-and-e2e-tests:
      runs-on: ubuntu-latest
      needs: build-and-push-image
      env:
        AIRFLOW_WWW_USER_PASSWORD: ${{ secrets.AIRFLOW_WWW_USER_PASSWORD }}
        AIRFLOW_WWW_USER_USERNAME: ${{ secrets.AIRFLOW_WWW_USER_USERNAME }}
        API_KEY: ${{ secrets.API_KEY }}
        CELERY_BACKEND_NAME: ${{ secrets.CELERY_BACKEND_NAME }}
        CELERY_BACKEND_PASSWORD: ${{ secrets.CELERY_BACKEND_PASSWORD }}
        CELERY_BACKEND_USERNAME: ${{ secrets.CELERY_BACKEND_USERNAME }}
        ELT_DATABASE_NAME: ${{ secrets.ELT_DATABASE_NAME }}
        ELT_DATABASE_PASSWORD: ${{ secrets.ELT_DATABASE_PASSWORD }}
        ELT_DATABASE_USERNAME: ${{ secrets.ELT_DATABASE_USERNAME }}
        FERNET_KEY: ${{ secrets.FERNET_KEY }}
        METADATA_DATABASE_NAME: ${{ secrets.METADATA_DATABASE_NAME }}
        METADATA_DATABASE_PASSWORD: ${{ secrets.METADATA_DATABASE_PASSWORD }}
        METADATA_DATABASE_USERNAME: ${{ secrets.METADATA_DATABASE_USERNAME }}
        POSTGRES_USER: ${{ secrets.POSTGRES_CONN_USERNAME }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_CONN_PASSWORD }}
        POSTGRES_CONN_HOST: ${{ secrets.POSTGRES_CONN_HOST }}
        POSTGRES_CONN_PASSWORD: ${{ secrets.POSTGRES_CONN_PASSWORD }}
        POSTGRES_CONN_PORT: ${{ secrets.POSTGRES_CONN_PORT }}
        POSTGRES_CONN_USERNAME: ${{ secrets.POSTGRES_CONN_USERNAME }}
        AIRFLOW_UID: ${{ vars.AIRFLOW_UID }}
        CHANNEL_HANDLE: ${{ vars.CHANNEL_HANDLE }}
        DOCKERHUB_NAMESPACE: ${{ vars.DOCKERHUB_NAMESPACE }}
        DOCKERHUB_REPOSITORY: ${{ vars.DOCKERHUB_REPOSITORY }}
        DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Get changed files
          id: changed-files-tests
          uses: tj-actions/changed-files@v45
          with:
            files: |
                dags/**
                include/**
                docker-compose.yaml
        - name: Debug changed files
          run: |
            echo "any_changed: ${{ steps.changed-files-tests.outputs.any_changed }}"
            echo "changed: ${{ steps.changed-files-tests.outputs.changed }}"
            echo "event_name: ${{ github.event_name }}"
            echo "DOCKERHUB_NAMESPACE: ${{ vars.DOCKERHUB_NAMESPACE }}"
            echo "DOCKERHUB_REPOSITORY: ${{ vars.DOCKERHUB_REPOSITORY }}"
            echo "Full image name would be: ${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.DOCKERHUB_REPOSITORY }}:latest"
        - name: Log in to DockerHub for tests
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}
        - name: Set up Docker Compose
          env:
            DOCKERHUB_NAMESPACE: anthonyinbc
            DOCKERHUB_REPOSITORY: yt_api_elt
          run: docker compose up -d
        - name: Run Unit and Integration Tests
          run: docker exec -t airflow-worker sh -c "pytest tests/ -v"
        - name: Run End-to-End DAG Tests
          run: |
            DAG_NAMES=("produce_json" "update_db" "data_quality")
            for DAG in "${DAG_NAMES[@]}"; do 
              docker exec -t airflow-worker sh -c "airflow dags test $DAG"
            done
        - name: Tear down Docker Compose
          run: docker compose down